name: CI

on:
  push:
    branches:
      - main
      - beta
      - sdk-release/**
      - feature/**
  pull_request:
    branches:
      - main
      - beta
      - sdk-release/**
      - feature/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        php-versions: ['7.1', '7.2', '7.3', '7.4', '8.0', '8.1']
        phpunit-versions: ['latest']
        include:
        - operating-system: 'ubuntu-latest'
          php-versions: '7.2'
          phpunit-versions: '8.5.21'
    steps:
      - uses: actions/checkout@master
      - name: PHP-CS-Fixer
        uses: shivammathur/setup-php@v2
        with:
          args: --format=txt --diff --dry-run --using-cache=no --verbose .
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Conventionally you would hash "composer.lock", but we don't commit
          # that, so we hash on "composer.json" instead.
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
      # We run php-cs-fixer in a separate job, but the version we use is not compatible
      # with all the versions of PHP that we want to execute PHPStan upon
      - name: Trim dependency
        run: composer remove --dev friendsofphp/php-cs-fixer
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Run phpstan
        run: vendor/bin/phpstan analyse src
  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - AUTOLOAD=0
          - AUTOLOAD=1
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
      # We run php-cs-fixer and PHPStan in separate jobs, but the versions we use are not compatible
      # with all the versions of PHP that we want to execute PHPUnit upon
      - name: Trim dependency
        run: composer remove --dev friendsofphp/php-cs-fixer phpstan/phpstan
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Change build.php permissions
        run: chmod +x ./build.php
      - name: Run test suite
        run: |
          php --version
          ./build.php $env:AUTOLOAD